
//Container
//===============================================

.container {
	padding: 10px;

	@media (min-width:$tablet)
	{
		width:95%;
		max-width: 1024px;
		margin: 0 auto;
	}
}




//================================
//Grid Columns
//================================


.grid__row{

	width: 90%;
	@extend %clearfix;
	


	@media (min-width: $tablet) {
		margin:10px;
	

	}


	&:first-child {
		display: flex;
		flex-direction: column;

		@media (min-width: $tablet)
		{
			flex-direction: row;	
			flex-wrap: wrap;
		}


		.grid__col--3 {
			align-self: center;

				@media (min-width: $tablet)
				{
					align-self: start;
				}
		}
		

	}




}






@for  $i from 1 through $g-col-count {
		.grid__col--#{$i} {
			
			display: flex;
			flex-direction: column;	

			@media (min-width:$tablet)
			{
				flex-direction: row;
			}		

		}
}	


//================================
// Grid Row
//================================

.grid {
	@include bg-colors($grid-colors);
}


@media (min-width: 769px) {

	@for  $i from 1 through $g-col-count {

		$context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
		$target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

		//Generate column modifier classes

		.grid__col--#{$i} {
			max-width: percentage($target / $context);
			width: percentage($target / $context);
			
			
			
			
		}

	}
}

//Column Styles

[class^="grid__col--"] {

	@media (min-width: 1px) and (max-width: 768px) {
		margin-top: em(12px);
		margin-bottom: em(12px);
	}

	@media (min-width: 769px) {
		@include doubly(percentage($g-gutter-width / $context));
		float:left;
		min-height:1px;
		padding-left:10px;
		padding-right:10px;
		
	}

}


 .grid__col--7.centered { 

	@extend %centered;

}





