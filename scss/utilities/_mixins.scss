//BEM Elements

@mixin e($element) {
	&__#{$element}{
		@content;
	}
}

@mixin m($modifier) {
	&--#{$modifier}{
		@content;
	}
}

//Flexbox mixin

@mixin flexBox($disp, $flexDir, $flexWrap){
		display: $disp;
		flex-direction: $flexDir;
		flex-wrap: $flexWrap;

}

//Text 

@mixin text($fontSize:$base__font-size, $color:null, $weight:null){

	font-size: em($fontSize);
	color: $color;
	font-weight: $weight;
	

}

// Generate modifier color classes

@mixin ui-colors($map) {
	@each $theme, $color in $map {
		&--#{$theme}.theme__colors {
			background-color: $color;
			@content;  	

		}
	}

}


//Media Query Mixins

@mixin mq($break){

	@if $break == "small" {
		@media (min-width:$brkpoint-sm) and (max-width: $brkpoint-md){
        	@content;
    	}
	}
	@else if $break == 'medium'{
		@media (min-width:$brkpoint-md + 1){
          @content;
     	}
	}

	@else if $break == "large" {
      @media (min-width:$brkpoint-lg) {
          @content;
      }
  	} 
   	@else  {
      @error "Whoops! No value could be retrieved for] ' #{$break}  ' "
    
    }

}